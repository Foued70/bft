* Docs.
* Examples.
* Tutorials.
* Change interface (can be based on Boost.Geometry)
    * `fuse` and `return_fuse`
    * allow using any container/range/iterator pair of size 2^N
    * use tags (mass_tag, belief_tag, etc.)?

bft_function<fod> f(Container<T> values);
bft_function<fod> f(std::vector<T> values);
bft_function<fod> f(std::initializer_list<T> values); // C++11

#ifdef BOOST_BFT_CHECK
#	ifndef BOOST_BFT_CHECK_PRECISION
#		define BOOST_BFT_CHECK_PRECISION 1e-8
#	endif // BOOST_BFT_CHECK_PRECISION
// TODO: check that sum(:) ~ 1.0 +- BOOST_BFT_CHECK_PRECISION
#endif // BOOST_BFT_CHECK

mass_array<fod> m1a(50, 50);
mass_array<fod> m2a(50, 50);

#if 0

namespace bft = namespace boost::bft;

typedef bft::mass_model< /*set_size = */5, /*value_type = */double > mass_type;

#endif
